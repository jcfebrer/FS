//*******************************************************************
// File name: $ highgui_h.cs $
// Author:		$ Heiko Kieﬂling, (c) iib-chemnitz.de $
// Email:			hki@hrz.tu-chemnitz.de
// 
// License:		There is no explicit license attached. The code is
//						provided 'as is'. Feel free to use the code how you like 
//						but without any warranty.
//						If you include the code in your own projects and/or
//						redistribute pls. include this header.
//
// History:		Rev. 1.0 (beta), hki - initial revision
// ToDo:			Documentation
//*******************************************************************
// Code generated by cvDocParser V1.0
//*******************************************************************


using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.InteropServices;

namespace openCV
{
	/// Black box cvcapture
	[StructLayout(LayoutKind.Sequential)]
	public struct CvCapture
	{
		public IntPtr ptr;
	}

	//black box cvvideowriter
	[StructLayout(LayoutKind.Sequential)]
	public struct CvVideoWriter
	{
		public IntPtr ptr;
	}

	public partial class cvlib
	{
		/// <summary>
		/// Left image unchanged
		/// </summary>
		public const int CV_LOAD_IMAGE_UNCHANGED = -1;

		/// <summary>
		/// 8 bit, gray
		/// </summary>
		public const int CV_LOAD_IMAGE_GRAYSCALE = 0;

		/// <summary>
		/// 8 bit unless combined with CV_LOAD_IMAGE_ANYDEPTH, color
		/// </summary>
		public const int CV_LOAD_IMAGE_COLOR = 1;

		/// <summary>
		/// any depth, if specified on its own gray
		/// </summary>
		public const int CV_LOAD_IMAGE_ANYDEPTH = 2;

		/// <summary>
		/// by itself equivalent to CV_LOAD_IMAGE_UNCHANGED
		/// but can be modified with CV_LOAD_IMAGE_ANYDEPTH 
		/// </summary>
		public const int CV_LOAD_IMAGE_ANYCOLOR = 4;

		public const int CV_CAP_PROP_POS_MSEC = 0;
		public const int CV_CAP_PROP_POS_FRAMES = 1;
		public const int CV_CAP_PROP_POS_AVI_RATIO = 2;
		public const int CV_CAP_PROP_FRAME_WIDTH = 3;
		public const int CV_CAP_PROP_FRAME_HEIGHT = 4;
		public const int CV_CAP_PROP_FPS = 5;
		public const int CV_CAP_PROP_FOURCC = 6;
		public const int CV_CAP_PROP_FRAME_COUNT = 7;
		public const int CV_CAP_PROP_FORMAT = 8;
		public const int CV_CAP_PROP_MODE = 9;
		public const int CV_CAP_PROP_BRIGHTNESS = 10;
		public const int CV_CAP_PROP_CONTRAST = 11;
		public const int CV_CAP_PROP_SATURATION = 12;
		public const int CV_CAP_PROP_HUE = 13;
		public const int CV_CAP_PROP_GAIN = 14;
		public const int CV_CAP_PROP_CONVERT_RGB = 15;

		public const int CV_EVENT_MOUSEMOVE = 0;
		public const int CV_EVENT_LBUTTONDOWN = 1;
		public const int CV_EVENT_RBUTTONDOWN = 2;
		public const int CV_EVENT_MBUTTONDOWN = 3;
		public const int CV_EVENT_LBUTTONUP = 4;
		public const int CV_EVENT_RBUTTONUP = 5;
		public const int CV_EVENT_MBUTTONUP = 6;
		public const int CV_EVENT_LBUTTONDBLCLK = 7;
		public const int CV_EVENT_RBUTTONDBLCLK = 8;
		public const int CV_EVENT_MBUTTONDBLCLK = 9;

		public const int CV_EVENT_FLAG_LBUTTON = 1;
		public const int CV_EVENT_FLAG_RBUTTON = 2;
		public const int CV_EVENT_FLAG_MBUTTON = 4;
		public const int CV_EVENT_FLAG_CTRLKEY = 8;
		public const int CV_EVENT_FLAG_SHIFTKEY = 16;
		public const int CV_EVENT_FLAG_ALTKEY = 32;

		public const int CV_WINDOW_AUTOSIZE = 1;
		public const int HG_WINDOW_AUTOSIZE = 1;
	}
}
