<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>